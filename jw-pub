#!/usr/bin/env python3
import argparse
import os

from jwlib.arguments import add_arguments
from jwlib.parse import JWPubMedia
import jwlib.output as jo


parser = argparse.ArgumentParser(prog='jw-pub',
                                 usage='%(prog)s [options] [DIR]',
                                 description='Index or download sound recordings from jw.org')

parser.add_argument('pub',
                    metavar='publication code',
                    help='publication to index')
parser.add_argument('--type',
                    default='video',
                    choices=['video', 'audio', 'pdf', 'zip', 'rtf', 'epub+zip'],
                    help='mimetype')

add_arguments(parser, ['--quiet',
                       '--mode',
                       '--lang',
                       '--book',
                       '--download',
                       '--no-download',
                       '--quality',
                       '--checksum',
                       '--no-checksum',
                       'work_dir'])

jw = JWPubMedia()

parser.parse_args(namespace=jw)
mode = jw.mode
print(vars(jw))

# exit()
r = jw.parse()

wd = jw.work_dir
subdir = jw.pub + '-' + jw.lang

if not mode or mode == 'stdout':
    subdir = ''

jw.download_all(os.path.join(wd, subdir))

if not mode:
    pass
elif mode == 'stdout':
    jo.output_stdout(r, wd)
elif mode == 'm3u':
    jo.output_m3u(r, wd, subdir)
elif mode == 'm3ucompat':
    jo.output_m3u(r, wd, subdir, flat=True)
elif mode == 'filesystem':
    jo.clean_symlinks(os.path.join(wd, subdir), quiet=jw.quiet)
    jo.output_filesystem(r, wd, subdir, include_keyname=True)
elif mode == 'html':
    jo.output_html(r, wd, subdir)
